"""
Test code of bot to Telegram from https://www.youtube.com/watch?v=M8fhrtvedHA&t=620s
https://core.telegram.org/bots/api - –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è

Test5MasaBot
"""
#pip install pyTelegramBotAPI - v 4.1.0
#config - import config.py
import telebot
import config

#–ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
import random
from telebot import types


bot = telebot.TeleBot(config.TOKEN)

@bot.message_handler(commands = ['start'])
def welcome(message):
    #–ú–µ—Ç–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∫–æ–≥–¥–∞ –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–∑ (/start)
    sti = open('static/AnimatedSticker.tgs', 'rb')
    bot.send_sticker(message.chat.id, sti)

    #keyboard
    #–°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ã—á–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é. resize_keyboard - –º–∞–ª–µ–Ω—å–∫–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
    #–ö–Ω–æ–ø–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    item1 = types.KeyboardButton("4Ô∏è‚É£ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ")
    item2 = types.KeyboardButton("üëã –ö–∞–∫ –¥–µ–ª–∞?")

    markup.add(item1, item2)

    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, "
                                      "–±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã –±—ã—Ç—å –ø–æ–¥–æ–ø—ã—Ç–Ω—ã–º –∫—Ä–æ–ª–∏–∫–æ–º.".format(message.from_user,
                                                                                             bot.get_me()),
                     parse_mode='html', #—Ä–∞–∑–º–µ—Ç–∫–∞ html
                     reply_markup=markup #–ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
                     )



@bot.message_handler(content_types = ['text'])
def lalala(message):
    #–†–µ–∞–ª–∏–∑–∞—Ü–∏—è —ç—Ö–æ-–±–æ—Ç–∞
    #bot.send_message(message.chat.id, message.text)
    #–ê–¥–µ–∫–≤–∞—Ç–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
    if message.chat.type == 'private':
        if message.text == '4Ô∏è‚É£ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ':
            bot.send_message(message.chat.id, str(random.randint(0,100)))
        elif message.text == 'üëã –ö–∞–∫ –¥–µ–ª–∞?':

            #–í—Ç–æ—Ä–æ–π —Ç–∏–ø –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (–∏–Ω–ª–∞–π–Ω–æ–≤–∞—è)
            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–•–æ—Ä–æ—à–æ", callback_data='good')
            item2 = types.InlineKeyboardButton("–ù–µ –æ—á–µ–Ω—å", callback_data='bad')

            markup.add(item1, item2)

            bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, —Å–∞–º –∫–∞–∫?', reply_markup=markup)
        else:
            bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å ‚òùÔ∏è')

#–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–Ω–ª–∞–π–Ω–æ–≤–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'good':
                bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ')
            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, '–ë—ã–≤–∞–µ—Ç –∏ —Ö—É–∂–µ')

            #remove inline buttons
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="üëã –ö–∞–∫ –¥–µ–ª–∞?", reply_markup=None)

            #–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            bot.answer_callback_query(chat_id=call.message.chat.id, show_alert=False, text = "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ")

    except Exception as e:
        print(repr(e))
#RUN
bot.polling(none_stop=True)

